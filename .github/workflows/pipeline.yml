name: WorkFlow
on:
  push:
    branches:
      - feature-esteban-espinoza

jobs:
    SAST:
      runs-on: ubuntu-latest
      steps: 

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Clonar Repo
        uses: actions/checkout@v4

    #  - name: SonarCloud Scan
    #    uses: SonarSource/sonarcloud-github-action@v2.3.0
    #    env:
    #      SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
    #      args: >
    #        -Dsonar.organization=altheus26 \
    #        -Dsonar.projectKey=altheus26_Laboratorio-final \
      
    #  - name: SonarQube Quality Gate Check   
    #    uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
    #    env:
    #      SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
#----------------------------- SCA ------------------------
    SCA:
      needs: SAST
      runs-on: ubuntu-latest
      steps: 
  
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Clonar Repo
        uses: actions/checkout@v4

      - name: Setup Node environment
        uses: actions/setup-node@v4.0.2
      
      - name: Yarn Setup
        uses: DerYeger/yarn-setup-action@v1.0.1
        with:
          node-version: 16
      - run: yarn build
        
      #- name: Dependency Check
      #  uses: dependency-check/Dependency-Check_Action@main
      #  env:
      #    JAVA_HOME: /opt/jdk
      #  id: Depcheck
      #  with:
      #    project: '${{github.event.repository.name}}'
      #    path: '.'
      #    format: 'HTML'
      #    out: 'reports' # this is the default, no need to specify unless you wish to override it
      #    args: >
            #--failOnCVSS 7
            
     # - name: Upload Test results
     #   uses: actions/upload-artifact@master
     #   with:
     #      name: Depcheck report
     #      path: ${{github.workspace}}/reports
      
      
#------ Docker build -------
    DockerScan:
      needs: SCA
      runs-on: ubuntu-latest
      steps: 
       - name: Clonar Repo
         uses: actions/checkout@v4
        
       - name: Docker Login
         uses: docker/login-action@v3.1.0
         with:
            username: ${{secrets.DOCKER_USER}}
            password: ${{secrets.TOKEN_DOCKER}}
      
       - name: Docker Setup Buildx
         uses: docker/setup-buildx-action@v3.3.0
      
       - name: Docker build
         run: |
           docker build -t estebanignacio/laboratorio-final-esteban-espinoza:latest .

       - name: Trivy Scan
         uses: aquasecurity/trivy-action@0.20.0
         with:
          image-ref: 'docker.io/estebanignacio/laboratorio-final-esteban-espinoza:latest'
          scan-type: image
          format: 'table'
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          output: 'trivy_scan.json'
       
       - name: Upload Trivy Report
         uses: actions/upload-artifact@master
         with:
           name: Trivy Report
           path: ${{github.workspace}}/trivy_scan.json

       - name: Docker push
         run: |
           docker push estebanignacio/laboratorio-final-esteban-espinoza:latest

       - name: Start Docker
         run: |
          docker run -d --name laboratorio-final-esteban-espinoza -p 8081:80 estebanignacio/laboratorio-final-esteban-espinoza:latest
       - name: ZAP Scan
         uses: zaproxy/action-baseline@v0.12.0
         with:
           docker_name: 'docker.io/estebanignacio/laboratorio-final-esteban-espinoza:latest'
           target: http://localhost:8081
           allow_issue_writing: false
           #fail_action: true
       - name: Upload ZAP Report
         uses: actions/upload-artifact@master
         with:
           name: ZAP Scan
           path: ${{github.workspace}}/zap_scan

    deploy:
      needs: DockerScan
      runs-on: self-hosted
      steps:
        - name: Clonar repo
          uses: actions/checkout@v4
          
        - name: Despliegue
          run: |
            kubectl apply -f deploy.yaml
           
